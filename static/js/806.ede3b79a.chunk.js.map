{"version":3,"file":"static/js/806.ede3b79a.chunk.js","mappings":"4KACA,EAA2B,2BAA3B,EAAsE,gCAAtE,EAAqH,+BAArH,EAA+J,2BAA/J,EAAgR,wBAAhR,EAAqT,6BAArT,EAAwV,sBAAxV,EAA0X,4BCA1X,GAAgB,MAAQ,yBAAyB,gBAAkB,mCAAmC,MAAQ,0B,SCa9G,EATkB,SAACA,GACf,OACI,iBAAKC,UAAWC,EAAAA,gBAAhB,WACI,gBAAKD,UAAWC,EAAAA,MAASC,IAAKH,EAAMI,IAAKC,IAAI,MAC7C,gBAAKJ,UAAWC,EAAAA,KAAhB,SAAyBF,EAAMM,c,UCR3C,EAA8G,6BAA9G,EAAqJ,6BAArJ,EAAoO,4B,UCepO,EAVoB,SAACN,GAEjB,OACI,gBAAKC,UAAWC,EAAY,IAAMA,EAAlC,UACI,UAAC,KAAD,CAASD,UAAWC,EAAWK,GAAE,oBAAeP,EAAMQ,MAAtD,WAA8D,gBAAKL,IAAKH,EAAMG,IAAKE,IAAI,KAAKL,EAAMQ,WCT9G,EAAgC,kCAAhC,EAA0E,0B,UCc1E,EATmB,SAACR,GAChB,OACI,iBAAKC,UAAWC,EAAhB,WACQ,gBAAKD,UAAWC,EAASC,IAAKM,EAAUJ,IAAI,MAChD,4C,UCgFLK,GAAmBC,E,OAAAA,GAAU,CAChCC,KAAK,kBADiBD,EAfR,SAACX,GACf,OACI,kBAAMa,SAAUb,EAAMc,aAAcb,UAAWC,EAA/C,WACI,SAACa,EAAA,EAAD,CACOC,UAAW,QACXC,YAAY,iBACZT,KAAM,oBAEb,0BACI,mBAAQP,UAAWC,EAAnB,0BAYhB,EApFiB,SAACF,GAGd,IAAIkB,EAAmBlB,EAAMmB,YAAYC,KAAI,SAAAC,GAAG,OAAI,SAAC,EAAD,CAAab,KAAMa,EAAIb,KAEVL,IAAKkB,EAAIjB,KADJiB,EAAIC,OAGtEC,EAAcvB,EAAMwB,SAASJ,KAAI,SAAAC,GAAG,OAAI,SAAC,EAAD,CAAWf,QAASe,EAAIf,QAASF,IAAKiB,EAAIjB,KAC1BiB,EAAIC,OA0BhE,OACI,4BAAK,cAAGrB,UAAWC,EAAd,uBACD,iBAAKD,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,kBAAOuB,KAAK,OAAOR,YAAY,YAC/B,gBAAKd,IAAKuB,EAAQrB,IAAI,SAE1B,gBAAKJ,UAAWC,EAAhB,SACKgB,KAIL,gBAAKjB,UAAWC,EAAhB,UACI,SAAC,EAAD,OAGJ,gBAAKD,UAAWC,EAAhB,SACKqB,KAGL,SAACb,EAAD,CAAkBG,SAzBT,SAACc,GAElB3B,EAAM4B,mBAAmBD,EAAOE,0BCQxC,GAD0BC,E,QAAAA,KAhBJ,SAACC,GACnB,MAAO,CACHP,SAAUO,EAAMC,aAAaR,SAC7BL,YAAaY,EAAMC,aAAab,gBAGf,SAACc,GACtB,MAAO,CACHL,mBAAoB,SAACC,GACjBI,GAASL,EAAAA,EAAAA,GAAmBC,QAOdC,CAA6CI,GCvCvE,EALqB,SAAClC,GAElB,OAAQ,SAAC,EAAD","sources":["webpack://instello/./src/Pages/Messages/MessagesPage/Messages.module.css?3fce","webpack://instello/./src/Pages/Messages/MessagesPage/ChatsItem/ChatsItem.module.css?0704","Pages/Messages/MessagesPage/ChatsItem/ChatsItem.jsx","webpack://instello/./src/Pages/Messages/MessagesPage/MessageItem/MessageItem.module.css?5c61","Pages/Messages/MessagesPage/MessageItem/MessageItem.jsx","webpack://instello/./src/Pages/Messages/MessagesPage/ChatAvatar/ChatAvatar.module.css?0744","Pages/Messages/MessagesPage/ChatAvatar/ChatAvatar.jsx","Pages/Messages/MessagesPage/Messages.jsx","Pages/Messages/MessagesPage/MessagesContainer.jsx","Pages/Messages/MessagesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Messages_messages__mmpDD\",\"messageHeader\":\"Messages_messageHeader__v9Fe-\",\"messagesItem\":\"Messages_messagesItem__pt8No\",\"chatName\":\"Messages_chatName__0wBYB\",\"chatWrapper\":\"Messages_chatWrapper__52kS5\",\"active\":\"Messages_active__xA2yJ\",\"chats\":\"Messages_chats__-U2mQ\",\"getMessage\":\"Messages_getMessage__uf8NX\",\"btn\":\"Messages_btn__ar0Es\",\"titleName\":\"Messages_titleName__aSBYf\"};","// extracted by mini-css-extract-plugin\nexport default {\"chats\":\"ChatsItem_chats__6fFtX\",\"chatsItemAvatar\":\"ChatsItem_chatsItemAvatar__80kOs\",\"image\":\"ChatsItem_image__maLq5\"};","import React from \"react\";\r\nimport s from './ChatsItem.module.css';\r\n\r\n\r\n\r\nconst ChatsItem = (props) => {\r\n    return (\r\n        <div className={s.chatsItemAvatar}>\r\n            <img className={s.image} src={props.img} alt=\"\"/>\r\n            <div className={s.chat}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  ChatsItem;","// extracted by mini-css-extract-plugin\nexport default {\"chats\":\"MessageItem_chats__dnfR9\",\"messagesItem\":\"MessageItem_messagesItem__WzWp6\",\"message\":\"MessageItem_message__vU4fo\",\"navLink\":\"MessageItem_navLink__rndMv\",\"messages\":\"MessageItem_messages__jNb57\",\"active\":\"MessageItem_active__u+Azm\"};","import React from \"react\";\r\nimport s from './MessageItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst MessageItem = (props) => {\r\n\r\n    return (\r\n        <div className={s.message + \" \" + s.active}>\r\n            <NavLink className={s.navLink} to={`/messages/${props.name}`}><img src={props.src} alt=\"\"/>{props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  MessageItem;","// extracted by mini-css-extract-plugin\nexport default {\"commentAvatar\":\"ChatAvatar_commentAvatar__piTaF\",\"image\":\"ChatAvatar_image__IdNdu\"};","import React from \"react\";\r\nimport s from './ChatAvatar.module.css';\r\nimport avatar_1 from \"../../../../assets/image/avatar-1.jpg\";\r\n\r\n\r\n\r\nconst ChatAvatar = (props) => {\r\n    return (\r\n        <div className={s.commentAvatar}>\r\n                <img className={s.image} src={avatar_1} alt=\"\"/>\r\n            <p>Sindy Forest</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  ChatAvatar;","import React from \"react\";\r\nimport s from './Messages.module.css';\r\nimport ChatsItem from \"./ChatsItem/ChatsItem\";\r\nimport search from \"../../../assets/image/search.png\"\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport ChatAvatar from \"./ChatAvatar/ChatAvatar\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\n\r\n\r\n\r\nconst Messages = (props) => {\r\n\r\n\r\n    let messagesElements = props.messageData.map(obj => <MessageItem name={obj.name}\r\n                                                                     key={obj.id}\r\n                                                                     src={obj.img}/>);\r\n\r\n    let chatElement = props.chatData.map(obj => <ChatsItem message={obj.message} img={obj.img}\r\n                                                           key={obj.id}/>)\r\n/*\r\n\r\n\r\n    let onSendMessageKey = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            let text =\r\n                props.sendMessageCreator();\r\n        }\r\n    }\r\n\r\n    let onSendMessage = (e) => {\r\n        props.sendMessageCreator();\r\n    }\r\n\r\n\r\n    let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBodyCreator(body)\r\n    }*/\r\n\r\n    const addNewMessage =(values)=>{\r\n\r\n        props.sendMessageCreator(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div><p className={s.titleName}>Messages</p>\r\n            <div className={s.messages}>\r\n                <div className={s.messageHeader}>\r\n                    <input type=\"text\" placeholder=\"Search\"/>\r\n                    <img src={search} alt=\"\"/>\r\n                </div>\r\n                <div className={s.messagesItem}>\r\n                    {messagesElements}\r\n\r\n                </div>\r\n\r\n                <div className={s.chatName}>\r\n                    <ChatAvatar/>\r\n                </div>\r\n\r\n                <div className={s.chats}>\r\n                    {chatElement}\r\n                </div>\r\n\r\n                <MessageReduxForm onSubmit={addNewMessage}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst MessageForm=(props)=>{\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.getMessage}>\r\n            <Field\r\n                   component={\"input\"}\r\n                   placeholder=\"Your Message..\"\r\n                   name={\"newMessageBody\"}\r\n            />\r\n            <div >\r\n                <button className={s.btn}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst  MessageReduxForm = reduxForm({\r\n    form:\"AddMessageForm\"\r\n})(MessageForm)\r\n\r\n\r\n\r\nexport default Messages;","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../../Redux/Reducer/messages_Reducer\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n/*\r\nconst MessagesCantainer = (props) => {\r\n\r\n    let state = props.store.getState()\r\n\r\n    let onSendMessage = (e) => {\r\n        props.store.dispatch(sendMessageCreator());\r\n    }\r\n\r\n\r\n    let onNewMessageChange = (body) => {\r\n        let action = updateNewMessageBodyCreator(body)//это функция реагирует на изминение при вводе\r\n        props.store.dispatch(action);\r\n    }\r\n\r\n    return (\r\n        <Messages sendMessageCreator={onSendMessage}\r\n                      updateNewMessageBodyCreator={onNewMessageChange}\r\n                      messageData={state.messagesPage.messageData}\r\n                      chatData={state.messagesPage.chatData}\r\n                      updateNewMessageBody={state.messagesPage.messagesPage} />\r\n\r\n\r\n    )\r\n}\r\n*/\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        chatData: state.messagesPage.chatData,\r\n        messageData: state.messagesPage.messageData,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessageCreator: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst MessagesContainer = connect(mapStateToProps, mapDispatchToProps)(Messages);\r\nexport default MessagesContainer;","import React from \"react\";\r\nimport MessagesContainer from \"./MessagesPage/MessagesContainer\";\r\n\r\n\r\n\r\n\r\nconst MessagesPage = (props) => {\r\n\r\n    return (<MessagesContainer />)\r\n}\r\n\r\nexport default MessagesPage;"],"names":["props","className","s","src","img","alt","message","to","name","avatar_1","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","messagesElements","messageData","map","obj","id","chatElement","chatData","type","search","values","sendMessageCreator","newMessageBody","connect","state","messagesPage","dispatch","Messages"],"sourceRoot":""}